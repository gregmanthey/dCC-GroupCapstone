@model dCC_GroupCapstone.Models.Vacation

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Vacation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.VacationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VacationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VacationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPrivate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsPrivate)
                    @Html.ValidationMessageFor(model => model.IsPrivate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.LocationQueried);

        @*<div class="form-group">
                @Html.LabelFor(model => model.LocationQueried, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LocationQueried, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LocationQueried, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Item1.SavedHotel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Item1.SavedHotel)
                        @Html.ValidationMessageFor(model => model.Item1.SavedHotel, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Item1.Activities, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Item1.Activities)
                        @Html.ValidationMessageFor(model => model.Item1.Activities, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
                <label for="Activities" class="control-label col-md-2">Activities Selected</label>
                <input type="text" name="Activities" id="activity-select" value="" />
                @Html.ValidationMessageFor(model => model.Activities)
            </div>*@

        @*<div class="form-group">
                <label for="Hotels" class="control-label col-md-2">Hotel Selected</label>
                <input type="text" name="Hotel" id="hotel-select" class="" value="" />
                @Html.ValidationMessageFor(model => model.Activities)
            </div>*@

        <div class="row">
            <div class="col-md-6 vacation-item" id="hotel-choice">
                <h3>Hotel Choices</h3>
                <div id="hotel-selection"></div>
                <div style="max-height:500px;overflow-y:scroll;overflow-x:hidden;">
                    <ul>
                    @for (var i = 0; i < Model.Hotels.Count(); i++)
                    {
                        <li>
                        @Html.HiddenFor(m=>Model.Hotels[i].Id)
                        @Html.HiddenFor(m => Model.Hotels[i].Name)
                        @Html.HiddenFor(m => Model.Hotels[i].PlaceId)
                        @Html.HiddenFor(m => Model.Hotels[i].LatLong)
                        @Html.CheckBoxFor(m => Model.Hotels[i].Checked)
                        @Model.Hotels[i].Name
                        </li>
                    }
                    </ul>
                </div>
            </div>
            <div class="col-md-6 vacation-item" id="activity-choice">
                <h3>Activity Choices</h3>
                <div id="activity-selection"></div>
                <div style="max-height:500px;overflow-y:scroll;overflow-x:hidden;">
                    <ul>
                    @for (var i = 0; i < Model.Activities.Count(); i++)
                    {
                        <li>
                        @Html.HiddenFor(m=>Model.Activities[i].Id)
                        @Html.HiddenFor(m => Model.Activities[i].Name)
                        @Html.HiddenFor(m => Model.Activities[i].PlaceId)
                        @Html.HiddenFor(m => Model.Activities[i].LatLong)
                        @Html.CheckBoxFor(m => Model.Activities[i].Checked)
                        @Model.Activities[i].Name
                        </li>
                    }
                    </ul>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}